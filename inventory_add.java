/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package slproject;

import java.awt.Image;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/**
 *
 * @author sLD20-Admin
 */
public class inventory_add extends javax.swing.JFrame {

    /**
     * Creates new form inventory_add
     */
    public inventory_add() {
        initComponents();
        //  fill_ProductName();
        try {
            Image i = ImageIO.read(getClass().getResource("sls_logo.png"));
            setIconImage(i);
        } catch (IOException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setTitle(Config.PRODUCTTITLE + "_" + Config.VERSION + " - Add Inventory (Current User : " + Config.currentUserFullName + ")");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbProduct = new javax.swing.JComboBox();
        lblProductName = new javax.swing.JLabel();
        lblProductCode = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        lblCode = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        txtProductCode = new javax.swing.JTextField();
        btnHome = new javax.swing.JButton();

        cbProduct.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Product" }));
        cbProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProductActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblProductName.setText("Product Name");

        lblProductCode.setText("Product Code");

        btnSubmit.setText("Submit");
        btnSubmit.setToolTipText("Click to add product");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setToolTipText("Click to clear product details");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnHome.setText("Home");
        btnHome.setToolTipText("Click to go to home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblProductName)
                        .addGap(18, 18, 18)
                        .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(lblProductCode)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSubmit)
                            .addComponent(txtProductCode))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCode)
                .addContainerGap(223, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnClear)
                .addGap(18, 18, 18)
                .addComponent(btnHome)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductName)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductCode)
                    .addComponent(lblCode)
                    .addComponent(txtProductCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnClear)
                    .addComponent(btnHome))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cbProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProductActionPerformed
        // TODO add your handling code here:
//        try {
//
//            //   lblCode.setText("");
//            String prName = cbProduct.getSelectedItem().toString();
//            Class.forName("com.mysql.jdbc.Driver");
//            String sql;
//            Connection con = DriverManager.getConnection("jdbc:mysql://" + Config.DBHOST + ":3306/" + Config.SCHEMANAME, Config.DBUSER, Config.DBPASS);
//            sql = "SELECT inv_code FROM inventory_master where inv_name='" + prName + "'";
//
//            //     sql = "SELECT max(id_no) as id_no FROM purchase_table where name = '" + prName + "'  ";
//            PreparedStatement ps = con.prepareStatement(sql);
//            ResultSet rs = ps.executeQuery();
//
//            while (rs.next()) {
//
////                String inv_name = rs.getString("inv_name");
////                jComboBox1.addItem(inv_name);
//                String inv_code = rs.getString("inv_code");
//                lblCode.setText(inv_code);
//
//            }
//            con.close();
//        } catch (ClassNotFoundException | SQLException e) {
//            JOptionPane.showMessageDialog(this, e.getMessage());
//        }
    }//GEN-LAST:event_cbProductActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        ClearFields();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        try {
            if (txtProductName.getText().trim() != null && txtProductName.getText().trim().length() > 0) {
                if (txtProductCode.getText().trim() != null && txtProductCode.getText().trim().length() > 0) {
                    if (!isProductNameExist(txtProductName.getText().trim())) {
                        if (!isProductCodeExist(txtProductCode.getText().trim())) {
                            Class.forName("com.mysql.jdbc.Driver");

                            Connection con = DriverManager.getConnection("jdbc:mysql://" + Config.DBHOST + ":3306/" + Config.SCHEMANAME, Config.DBUSER, Config.DBPASS);
                            Statement st = con.createStatement();

                            // String product = cbProduct.getSelectedItem().toString().trim();
                            String name = txtProductName.getText().trim();
                            String code = txtProductCode.getText().trim();
                            // code = getProductCodeByName(code);
                            String sql = "insert into inventory_master(inv_code,inv_name) values(?,?)";
                            PreparedStatement pre = con.prepareStatement(sql);
                            pre.setString(1, code);
                            pre.setString(2, name);
                            pre.executeUpdate();
                            pre.close();
                            con.close();
                            JOptionPane.showMessageDialog(this, "Inventory Added Succesfully","Inventory added succesfully",JOptionPane.INFORMATION_MESSAGE);
                            ClearFields();

                        } else {
                            JOptionPane.showMessageDialog(this, "product code already exist."
                                    + "\nPlease enter another product code.","Enter another product code",JOptionPane.WARNING_MESSAGE);
                            txtProductCode.requestFocus();
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "product name already exist."
                                    + "\nPlease enter another product name.","Enter another product name",JOptionPane.WARNING_MESSAGE);
                            txtProductName.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Please enter product code","Enter product code",JOptionPane.WARNING_MESSAGE);
                    txtProductCode.requestFocus();
                }

            } else {
                JOptionPane.showMessageDialog(this, "Please enter product name","Enter product name",JOptionPane.WARNING_MESSAGE);
                txtProductName.requestFocus();
            }

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private boolean isProductCodeExist(String invCode) {
        boolean rv = true;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://" + Config.DBHOST + ":3306/" + Config.SCHEMANAME, Config.DBUSER, Config.DBPASS);
            String sql = "SELECT count(*) as total FROM inventory_master where inv_code = '" + invCode + "'";

            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                int counter = rs.getInt("total");
                if (counter <= 0) {
                    rv = false;
                }
            }
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
        return rv;
    }

    private boolean isProductNameExist(String invName) {
        boolean rv = true;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://" + Config.DBHOST + ":3306/" + Config.SCHEMANAME, Config.DBUSER, Config.DBPASS);
            String sql = "SELECT count(*) as total FROM inventory_master where lower(inv_name) = '" + invName.toLowerCase() + "'";

            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                int counter = rs.getInt("total");
                if (counter <= 0) {
                    rv = false;
                }
            }
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
        return rv;
    }

//    private String getProductCodeByName(String invName) {
//        String rv = "";
//        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            Connection con = DriverManager.getConnection("jdbc:mysql://" + Config.DBHOST + ":3306/" + Config.SCHEMANAME, Config.DBUSER, Config.DBPASS);
//            String sql = "SELECT inv_code FROM inventory_master where inv_name ='" + invName + "'";
//
//            PreparedStatement ps = con.prepareStatement(sql);
//            ResultSet rs = ps.executeQuery();
//
//            while (rs.next()) {
//                rv = rs.getString("inv_code");
//            }
//            con.close();
//        } catch (ClassNotFoundException | SQLException e) {
//            e.printStackTrace();
//        }
//        return rv;
//    }

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        start_page start = new start_page();
        start.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void ClearFields() {
        txtProductName.setText(null);
        txtProductCode.setText(null);
    }

//    private void fill_ProductName() //FETCH VALUE IN COMBOBOX
//    {
//        try {
//            Class.forName("com.mysql.jdbc.Driver");
//            Connection con = DriverManager.getConnection("jdbc:mysql://" + Config.DBHOST + ":3306/" + Config.SCHEMANAME, Config.DBUSER, Config.DBPASS);
//            String sql = "SELECT inv_name FROM inventory_master";
//
//            PreparedStatement ps = con.prepareStatement(sql);
//            ResultSet rs = ps.executeQuery();
//
//            while (rs.next()) {
//
//                String inv_name = rs.getString("inv_name");
//                cbProduct.addItem(inv_name);
////                String inv_code = rs.getString("inv_code");
////                jComboBox2.addItem(inv_code);
//            }
//
//        } catch (ClassNotFoundException | SQLException e) {
//            JOptionPane.showMessageDialog(this, e.getMessage());
//        }
//    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventory_add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventory_add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventory_add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventory_add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventory_add().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cbProduct;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblProductCode;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JTextField txtProductCode;
    private javax.swing.JTextField txtProductName;
    // End of variables declaration//GEN-END:variables
}
